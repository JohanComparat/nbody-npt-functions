#! /usr/bin/env python

"""
This script uses the LineLuminosityFunction class to estimate the LF in the emission lines from the Galform mocks.


"""

from LineLuminosityFunctionFromSimulations import *

from lineListAir import *


# from Vipers
print "VIPERS"
zsVIMOSmin=n.array([0.18,0.41,0.51,0.56,0.65,0.84, 1.1])
zsVIMOSmax=n.array([0.41,0.65,0.7,0.83,0.84,1.1, 1.3])
linesFittedVIMOS=n.array([ [[H1_4862,"H1_4862"],[O3_5007,"O3_5007"]], [[O3_5007,"O3_5007"],[H1_4862,"H1_4862"]], [[O3_5007,"O3_5007"],[O2_mean,"O2_3728"],[H1_4862,"H1_4862"]], [[O3_5007,"O3_5007"],[O2_mean,"O2_3728"],[H1_4862,"H1_4862"]], [[O3_5007,"O3_5007"],[O2_mean,"O2_3728"],[H1_4862,"H1_4862"]], [[O2_mean,"O2_3728"]],[[O2_mean,"O2_3728"]] ])

areaDeep=0.61
area = 4*4*n.pi
ColorLimS = n.arange(1.,2.1,0.5)
"""
for ColorLim in ColorLimS :
	print "color limit=", ColorLim
	for ii in range(len(zsVIMOSmin)):
		zmin = zsVIMOSmin[ii]
		zmax = zsVIMOSmax[ii]
		lineSet=linesFittedVIMOS[ii]
		for line in lineSet :
			lf = LineLuminosityFunctionFromSimulations(lineWavelength=line[0], lineName=line[1], cosmology = cosmo, surveyName =  "GALFORM-VVDS", redshift_catalog = "galform.next.LFcatalog.fits", luminosityBins = n.logspace(38,45,25) , zmin = zmin, zmax = zmax)
			lf.setRedshiftArray( redshiftColumn='zObs' )
			lf.setRedshiftSelection()
			lf.setWeightArray( 1./(area) )
			selection = (lf.catalog['i'] < 22.5)& (lf.catalog['g']-lf.catalog['r']<ColorLim)
			lf.computeHistogramLF(selection)
			print "---------------------------------------------------"
			print line, zmin, zmax, lf.ngals
			lf.computeHistogramVariance(selection,jk=0.1)
			lf.computeMeanWeightedRedshift(selection)
			lf.get_completness_limit(selection)
			lf.writeLF(selection,surveyNameSuffix="gr_lt_"+str(n.round(ColorLim,1)))


for ColorLim in ColorLimS :
	print "color limit=", ColorLim
	for ii in range(len(zsVIMOSmin)):
		zmin = zsVIMOSmin[ii]
		zmax = zsVIMOSmax[ii]
		lineSet=linesFittedVIMOS[ii]
		for line in lineSet :
			lf = LineLuminosityFunctionFromSimulations(lineWavelength=line[0], lineName=line[1], cosmology = cosmo, surveyName =  "GALFORM-VVDS", redshift_catalog = "galform.next.LFcatalog.fits", luminosityBins = n.logspace(38,45,25) , zmin = zmin, zmax = zmax)
			lf.setRedshiftArray( redshiftColumn='zObs' )
			lf.setRedshiftSelection()
			lf.setWeightArray( 1./(area) )
			selection = (lf.catalog['i'] < 22.5)& (lf.catalog['r']-lf.catalog['z']<ColorLim)
			lf.computeHistogramLF(selection)
			print "---------------------------------------------------"
			print line, zmin, zmax, lf.ngals
			lf.computeHistogramVariance(selection,jk=0.1)
			lf.computeMeanWeightedRedshift(selection)
			lf.get_completness_limit(selection)
			lf.writeLF(selection,surveyNameSuffix="rz_lt_"+str(n.round(ColorLim,1)))

ColorLimS = n.arange(0,1.6,0.5)
for ColorLim in ColorLimS :
	print "color limit=", ColorLim
	for ii in range(len(zsVIMOSmin)):
		zmin = zsVIMOSmin[ii]
		zmax = zsVIMOSmax[ii]
		lineSet=linesFittedVIMOS[ii]
		for line in lineSet :
			lf = LineLuminosityFunctionFromSimulations(lineWavelength=line[0], lineName=line[1], cosmology = cosmo, surveyName =  "GALFORM-VVDS", redshift_catalog = "galform.next.LFcatalog.fits", luminosityBins = n.logspace(38,45,25) , zmin = zmin, zmax = zmax)
			lf.setRedshiftArray( redshiftColumn='zObs' )
			lf.setRedshiftSelection()
			lf.setWeightArray( 1./(area) )
			selection = (lf.catalog['i'] < 22.5)& (lf.catalog['g']-lf.catalog['r']>ColorLim)
			lf.computeHistogramLF(selection)
			print "---------------------------------------------------"
			print line, zmin, zmax, lf.ngals
			lf.computeHistogramVariance(selection,jk=0.1)
			lf.computeMeanWeightedRedshift(selection)
			lf.get_completness_limit(selection)
			lf.writeLF(selection,surveyNameSuffix="gr_gt_"+str(n.round(ColorLim,1)))

for ColorLim in ColorLimS :
	print "color limit=", ColorLim
	for ii in range(len(zsVIMOSmin)):
		zmin = zsVIMOSmin[ii]
		zmax = zsVIMOSmax[ii]
		lineSet=linesFittedVIMOS[ii]
		for line in lineSet :
			lf = LineLuminosityFunctionFromSimulations(lineWavelength=line[0], lineName=line[1], cosmology = cosmo, surveyName =  "GALFORM-VVDS", redshift_catalog = "galform.next.LFcatalog.fits", luminosityBins = n.logspace(38,45,25) , zmin = zmin, zmax = zmax)
			lf.setRedshiftArray( redshiftColumn='zObs' )
			lf.setRedshiftSelection()
			lf.setWeightArray( 1./(area) )
			selection = (lf.catalog['i'] < 22.5)& (lf.catalog['r']-lf.catalog['z']>ColorLim)
			lf.computeHistogramLF(selection)
			print "---------------------------------------------------"
			print line, zmin, zmax, lf.ngals
			lf.computeHistogramVariance(selection,jk=0.1)
			lf.computeMeanWeightedRedshift(selection)
			lf.get_completness_limit(selection)
			lf.writeLF(selection,surveyNameSuffix="rz_gt_"+str(n.round(ColorLim,1)))

"""

print "VVDS DEEP"
zsVIMOSmin=n.array([0.18,0.41,0.51,0.56,0.65,0.84, 1.1])
zsVIMOSmax=n.array([0.41,0.65,0.7,0.83,0.84,1.1, 1.3])
linesFittedVIMOS=n.array([ [[H1_4862,"H1_4862"],[O3_5007,"O3_5007"]], [[O3_5007,"O3_5007"],[H1_4862,"H1_4862"]], [[O3_5007,"O3_5007"],[O2_mean,"O2_3728"],[H1_4862,"H1_4862"]], [[O3_5007,"O3_5007"],[O2_mean,"O2_3728"],[H1_4862,"H1_4862"]], [[O3_5007,"O3_5007"],[O2_mean,"O2_3728"],[H1_4862,"H1_4862"]], [[O2_mean,"O2_3728"]],[[O2_mean,"O2_3728"]] ])

areaDeep=0.61
area = 4*4*n.pi
MagLimS = [24, 23.5, 23., 22.5]
for MagLim in MagLimS :
	print "mag limit=", MagLim
	for ii in range(len(zsVIMOSmin)):
		zmin = zsVIMOSmin[ii]
		zmax = zsVIMOSmax[ii]
		lineSet=linesFittedVIMOS[ii]
		for line in lineSet :
			lf = LineLuminosityFunctionFromSimulations(lineWavelength=line[0], lineName=line[1], cosmology = cosmo, surveyName =  "GALFORM-VVDS", redshift_catalog = "galform.next.LFcatalog.fits", luminosityBins = n.logspace(38,45,25) , zmin = zmin, zmax = zmax)
			lf.setRedshiftArray( redshiftColumn='zObs' )
			lf.setRedshiftSelection()
			lf.setWeightArray( 1./(area) )
			selection = (lf.catalog['i'] < MagLim)
			lf.computeHistogramLF(selection)
			print "---------------------------------------------------"
			print line, zmin, zmax, lf.ngals
			lf.computeHistogramVariance(selection,jk=0.1)
			lf.computeMeanWeightedRedshift(selection)
			lf.get_completness_limit(selection)
			lf.writeLF(selection,surveyNameSuffix="VVDSDEEP-MagLimI-"+str(MagLim))


# from DEEP2 survey
zsDEEP2min=n.array([0.33,0.33,0.4,0.45,0.50,0.60,0.70,0.75,0.78,0.83, 1.16 ])
zsDEEP2max=n.array([0.40,0.45,0.5,0.55,0.60,0.70,0.78,0.8,0.83,1.03, 1.3 ])
linesFittedDEEP2=n.array([ [[O3_5007,"O3_5007"]], [[H1_4862,"H1_4862"]], [[O3_5007,"O3_5007"]],[[H1_4862,"H1_4862"]], [[O3_5007,"O3_5007"]], [[O3_5007,"O3_5007"],[H1_4862,"H1_4862"]], [[O3_5007,"O3_5007"],[H1_4862,"H1_4862"]], [[O3_5007,"O3_5007"],[H1_4862,"H1_4862"], [O2_mean,"O2_3728"]], [[H1_4862,"H1_4862"],[O2_mean,"O2_3728"]], [[O2_mean,"O2_3728"]], [[O2_mean,"O2_3728"]] ])
area1=0.60
area2=0.62
area3=0.90
area4=0.66
areaAll=area1+area2+area3+area4
area = 4*4*n.pi
MagLimS = [23., 23.5, 24.2]
for MagLim in MagLimS :
	print "mag limit=", MagLim
	for ii in range(len(zsDEEP2min)):
		zmin = zsDEEP2min[ii]
		zmax = zsDEEP2max[ii]
		lineSet=linesFittedDEEP2[ii]
		for line in lineSet :
			print "---------------------------------------------------"
			print line, zmin, zmax
			lf = LineLuminosityFunctionFromSimulations(lineWavelength=line[0], lineName=line[1], cosmology = cosmo, surveyName =  "GALFORM-DEEP2", redshift_catalog = "galform.next.LFcatalog.fits", luminosityBins = n.logspace(38,45,25) , zmin = zmin, zmax = zmax)
			lf.setRedshiftArray( redshiftColumn='zObs' )
			lf.setRedshiftSelection()
			lf.setWeightArray( 1./(area) )
			selection = (lf.catalog['r'] < MagLim)
			lf.computeHistogramLF(selection)
			print "---------------------------------------------------"
			print line, zmin, zmax, lf.ngals
			lf.computeHistogramVariance(selection,jk=0.1)
			lf.computeMeanWeightedRedshift(selection)
			lf.get_completness_limit(selection)
			lf.writeLF(selection,surveyNameSuffix="DEEP2-MagLimR-"+str(MagLim))


import sys
sys.exit()

# from VVDS DEEP survey
print "VVDS DEEP"
zsVIMOSmin=n.array([0.18,0.41,0.51,0.65,0.84, 1.1])
zsVIMOSmax=n.array([0.41,0.65,0.7,0.84,1.1, 1.3])
linesFittedVIMOS=n.array([ [[H1_4862,"H1_4862"],[O3_5007,"O3_5007"]], [[O3_5007,"O3_5007"],[H1_4862,"H1_4862"]], [[O3_5007,"O3_5007"],[O2_mean,"O2_3728"],[H1_4862,"H1_4862"]], [[O3_5007,"O3_5007"],[O2_mean,"O2_3728"],[H1_4862,"H1_4862"]], [[O2_mean,"O2_3728"]], [[O2_mean,"O2_3728"]] ])

areaDeep=0.61
area = 4*4*n.pi

for ii in range(len(zsVIMOSmin)):
	zmin = zsVIMOSmin[ii]
	zmax = zsVIMOSmax[ii]
	lineSet=linesFittedVIMOS[ii]
	for line in lineSet :
		lf = LineLuminosityFunctionFromSimulations(lineWavelength=line[0], lineName=line[1], cosmology = cosmo, surveyName =  "GALFORM-VVDS", redshift_catalog = "galform.LFcatalog.fits", luminosityBins = n.logspace(38,45,25) , zmin = zmin, zmax = zmax)
		lf.setRedshiftArray( redshiftColumn='zObs' )
		lf.setRedshiftSelection()
		lf.setWeightArray( 1./(area) )
		selection = (lf.catalog['i'] < 24.)
		lf.computeHistogramLF(selection)
		print "---------------------------------------------------"
		print line, zmin, zmax, lf.ngals
		lf.computeHistogramVariance(selection,jk=0.1)
		lf.computeMeanWeightedRedshift(selection)
		lf.get_completness_limit(selection)
		lf.writeLF(selection,surveyNameSuffix="")


# from DEEP2 survey
zsDEEP2min=n.array([0.33,0.33,0.4,0.45,0.50,0.60,0.70,0.78,0.83, 1.16 ])
zsDEEP2max=n.array([0.40,0.45,0.5,0.55,0.60,0.70,0.78,0.83,1.03, 1.3 ])
linesFittedDEEP2=n.array([ [[O3_5007,"O3_5007"]], [[H1_4862,"H1_4862"]], [[O3_5007,"O3_5007"]],[[H1_4862,"H1_4862"]], [[O3_5007,"O3_5007"]], [[O3_5007,"O3_5007"],[H1_4862,"H1_4862"]], [[O3_5007,"O3_5007"],[H1_4862,"H1_4862"]], [[H1_4862,"H1_4862"],[O2_mean,"O2_3728"]], [[O2_mean,"O2_3728"]], [[O2_mean,"O2_3728"]] ])
area1=0.60
area2=0.62
area3=0.90
area4=0.66
areaAll=area1+area2+area3+area4
area = 4*4*n.pi

for ii in range(len(zsDEEP2min)):
	zmin = zsDEEP2min[ii]
	zmax = zsDEEP2max[ii]
	lineSet=linesFittedDEEP2[ii]
	for line in lineSet :
		print "---------------------------------------------------"
		print line, zmin, zmax
		lf = LineLuminosityFunctionFromSimulations(lineWavelength=line[0], lineName=line[1], cosmology = cosmo, surveyName =  "GALFORM-DEEP2", redshift_catalog = "galform.LFcatalog.fits", luminosityBins = n.logspace(38,45,25) , zmin = zmin, zmax = zmax)
		lf.setRedshiftArray( redshiftColumn='zObs' )
		lf.setRedshiftSelection()
		lf.setWeightArray( 1./(area) )
		selection = (lf.catalog['r'] < 24.1)
		lf.computeHistogramLF(selection)
		print "---------------------------------------------------"
		print line, zmin, zmax, lf.ngals
		lf.computeHistogramVariance(selection,jk=0.1)
		lf.computeMeanWeightedRedshift(selection)
		lf.get_completness_limit(selection)
		lf.writeLF(selection,surveyNameSuffix="")

