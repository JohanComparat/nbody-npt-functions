#! /usr/bin/env python

"""
This script produces quality plots to check that the LFs are fine compared to simumlations.
"""

import sys
from lib_plot import *
from lineListAir import *
import glob


plotDir="/home/comparat/database/Simulations/galform-lightcone/products/emissionLineLuminosityFunctions/plots/"

dir="/home/comparat/database/Simulations/galform-lightcone/products/emissionLineLuminosityFunctions/*/"
lf_measurement_files=n.array(glob.glob(dir+"*DEEP2-z*.txt"))
lf_measurement_files.sort()
lf_measurement_files_next=n.hstack((n.array(glob.glob(dir+"*DEEP2*NEXT-z?????.txt")),n.array(glob.glob(dir+"*DEEP2*NEXT-z????.txt")) ))
lf_measurement_files_next.sort()
lf_measurement_files_next_correction=n.sort(n.array(glob.glob(dir+"*DEEP2*NEXT-z*Rcorrection*.txt")))
lf_measurement_files_next_correction.sort()

dir="/home/comparat/database/DEEP2/products/emissionLineLuminosityFunctions/*/"
lf_measurement_files_deep2=n.array(glob.glob(dir+"*.txt"))
lf_measurement_files_deep2.sort()
#dir="/home/comparat/database/VVDS/products/emissionLineLuminosityFunctions/*/"
#lf_measurement_files_vvds=glob.glob(dir+"*.txt")


for jj in range(len(lf_measurement_files)):
	mCorr,error = n.loadtxt(lf_measurement_files_next_correction[jj] ,unpack=True)
	plot_EW_LF_measurement_simulation(lf_measurement_files[jj][:-4]+ ".fits", lf_measurement_files[jj],plotDir, n.array([[lf_measurement_files_deep2[jj],"deep2", mCorr, error],[lf_measurement_files_next[jj], "noExt"] ] ) )
	print lf_measurement_files[jj].split('/')[-1] , lf_measurement_files_next_correction[jj].split('/')[-1], lf_measurement_files_next[jj].split('/')[-1], lf_measurement_files_deep2[jj].split('/')[-1]


plotDir="/home/comparat/database/Simulations/galform-lightcone/products/emissionLineLuminosityFunctions/plots/"

dir="/home/comparat/database/Simulations/galform-lightcone/products/emissionLineLuminosityFunctions/*/"
lf_measurement_files=n.array(glob.glob(dir+"*VVDS-z*.txt"))
lf_measurement_files.sort()
lf_measurement_files_next=n.hstack((n.array(glob.glob(dir+"*VVDS*NEXT-z?????.txt")),n.array(glob.glob(dir+"*VVDS*NEXT-z????.txt")) ))
lf_measurement_files_next.sort()
lf_measurement_files_next_correction=n.sort(n.array(glob.glob(dir+"*VVDS*NEXT-z*Rcorrection*.txt")))
lf_measurement_files_next_correction.sort()

dir="/home/comparat/database/VVDS/products/emissionLineLuminosityFunctions/*/"
lf_measurement_files_VVDS=n.hstack((n.array(glob.glob(dir+"H1_4862*.txt")), n.array(glob.glob(dir+"O2_3728*.txt")), n.array(glob.glob(dir+"O3_5007*.txt"))))
lf_measurement_files_VVDS.sort()
#dir="/home/comparat/database/VVDS/products/emissionLineLuminosityFunctions/*/"
#lf_measurement_files_vvds=glob.glob(dir+"*.txt")


for jj in range(len(lf_measurement_files)):
	mCorr,error = n.loadtxt(lf_measurement_files_next_correction[jj] ,unpack=True)
	plot_EW_LF_measurement_simulation(lf_measurement_files[jj][:-4]+ ".fits", lf_measurement_files[jj],plotDir, n.array([[lf_measurement_files_VVDS[jj],"VVDS", mCorr, error],[lf_measurement_files_next[jj], "noExt"] ] ) )
	print lf_measurement_files[jj].split('/')[-1] , lf_measurement_files_next_correction[jj].split('/')[-1], lf_measurement_files_next[jj].split('/')[-1], lf_measurement_files_VVDS[jj].split('/')[-1]
